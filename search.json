[{"path":"https://achambaz.github.io/mediation.test/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 . Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://achambaz.github.io/mediation.test/articles/mediation-test.html","id":"simulation-scenarios","dir":"Articles","previous_headings":"1 Simulation settings","what":"Simulation scenarios","title":"mediation-test","text":"sample independently k=1e5k=1e5 data points tt-distributions (n−1)(n-1) degrees freedom noncentrality parameters n(δx,δy)\\sqrt{n}(\\delta_x , \\delta_y), n=50n=50. Three simulation scenarios considered: δx\\delta_x δy\\delta_y vary jointly 0 0.4; δy=0.2\\delta_y=0.2 fixed δx\\delta_x varies 0 0.4; δy=0\\delta_y=0 fixed δx\\delta_x varies 0 0.6, thereby exploring empirical type error across range parameter values within composite null hypothesis space. , repeatedly use function defined . testing procedures aim type error α=0.05\\alpha = 0.05.","code":"n_obs <- 50  simulate <- function(delta_x, delta_y, k = 1e5, n = n_obs) {     Xn <- rt(k, n - 1, sqrt(n) * delta_x)     Yn <- rt(k, n - 1, sqrt(n) * delta_y)     Zn <- cbind(Xn, Yn)     return(Zn) } alpha <- 0.05"},{"path":"https://achambaz.github.io/mediation.test/articles/mediation-test.html","id":"minimax-optimal-test","dir":"Articles","previous_headings":"1 Simulation settings","what":"Minimax optimal test","title":"mediation-test","text":"Three version minimax optimal test evaluated using function mediation_test_minimax: standard version, using normal approximation test statistic; test based corresponding (conservative) pp-value defined Supplementary Materials Miles Chambaz (2024); truncated minimax optimal test level d=0.1d = 0.1, order make fair comparison vGvG test, whose rejection region 0.1 away null hypothesis space.","code":"sample_size <- Inf quantile_function <- qnorm truncation <- 0.1"},{"path":"https://achambaz.github.io/mediation.test/articles/mediation-test.html","id":"bayes-risk-optimal-test","dir":"Articles","previous_headings":"1 Simulation settings","what":"Bayes risk optimal test","title":"mediation-test","text":"Three versions Bayes risk optimal test evaluated using function mediation_test_Bayes: standard version 0-1 loss function, standard version quadratic loss function, constrained test quadratic loss function. rely “maps” rejection probabilities embarked package. constrained truncated tests, also use truncation level d=0.1d = 0.1. “map” associates rejection probability every square [B(−1−m)m,B(−m)m]×[B(j−1−m)m,B(j−m)m] \\left[\\frac{B(-1-m)}{m},        \\frac{B(-m)}{m}\\right        ]        \\times \\left[\\frac{B(j-1-m)}{m}, \\frac{B(j-m)}{m}\\right] B=2Φ−1(1−α/2)B  = 2 \\Phi^{-1}(1 - \\alpha/2), m=64m=64 1≤,j≤2m1 \\leq ,j \\leq 2m. m different (alpha, truncation matter ), relied function compute_map_rejection_probs compute corresponding maps.","code":"m <- 64 map_01 <- map_01_0.05 map_quad <- map_quad_0.05 map_quad_trunc <- map_quad_0.05_0.1 if (!(alpha == 0.05 & m == 64 & truncation == 0.1)) {     map_01 <- compute_map_rejection_probs(         alpha = alpha,         K = m,         loss = \"0-1\",         truncation = 0,         return_solver = FALSE)     map_quad <- compute_map_rejection_probs(         alpha = alpha,         K = m,         loss = \"quad\",         truncation = 0,         return_solver = FALSE)     map_quad_trunc <- compute_map_rejection_probs(         alpha = alpha,         K = m,         loss = \"quad\",         truncation = truncation,         return_solver = FALSE) }"},{"path":"https://achambaz.github.io/mediation.test/articles/mediation-test.html","id":"other-testing-procedures","dir":"Articles","previous_headings":"1 Simulation settings","what":"Other testing procedures","title":"mediation-test","text":"minimax optimal Bayes risk optimal tests compared delta method, joint significance, vGvG tests.","code":"delta_method_test <- function(Zn, alpha) {     abs(Zn[, 1] * Zn[, 2]) / sqrt(apply(Zn^2, 1, sum)) >         qnorm(1 - alpha / 2) } joint_significance_test <- function(Zn, alpha, quantile_function = qnorm) {     abs(Zn[, 1]) > quantile_function(1 - alpha / 2) &         abs(Zn[, 2]) > quantile_function(1 - alpha / 2) } vGvG_test <- function(Zn, alpha = 0.05) {     if (alpha == 0.05) {         g <- function(t) {             tabs <- abs(t)             x <- c(0., 0.1, 0.11, 0.13, 0.14, 0.15, 1.35, 1.36, 1.37,                    1.44, 1.45, 2.05, 2.06, 2.07, 2.08, 2.09, 2.1)             y <- c(0., 0.1, 0.106723, 0.106723, 0.106724, 0.106724,                    1.30583, 1.31286, 1.3131, 1.3131, 1.3175, 1.9175,                    1.9275, 1.9375, 1.9475, 1.9575, 1.95996)             ifelse(tabs >= 2.1, 1.95996, approx(x, y, xout = tabs)$y)         }         out <- pmin(abs(Zn[, 1]), abs(Zn[, 2])) >             g(pmax(abs(Zn[, 1]), abs(Zn[, 2])))     } else {         out <- rep(NA, nrow(Zn))     }     return(out) }"},{"path":"https://achambaz.github.io/mediation.test/articles/mediation-test.html","id":"scenario-a","dir":"Articles","previous_headings":"","what":"2 Scenario (a)","title":"mediation-test","text":"first initialize vectors receive empirical powers. now position conduct Monte Carlo analysis. avoid unnecessary repetitions, define function called run_simulation call repeatedly.  Apart minimax optimal pp-value-based test, minimax optimal Bayes risk optimal tests vGvG test close nominal type 1 error (δx,δy)=(0,0)(\\delta_x,\\delta_y)=(0,0). tests greatly outperform delta method joint significance tests terms power smaller values δx=δy\\delta_x=\\delta_y, minimax optimal pp-value-based test power somewhere , converging quickly tests. delta method test remains conservative entire range parameter values. tests except delta method test begin converge power closer 0.4. minimax optimal (apart pp-value based test), Bayes risk optimal, vGvG tests perform similarly range parameter values, quadratic loss versions Bayes risk optimal test trading power loss 0.1–0.2 range slight improvement power 0.3–0.4 range, demonstrating greater emphasis quadratic loss places larger alternatives. truncated minimax optimal test begins slightly conservative relative 0.05, catches powerful tests fairly quickly. Despite similar tests, Bayes risk optimal vGvG tests suffer little terms power near least favorable distribution (δx,δy)=(0,0)(\\delta_x,\\delta_y)=(0,0).","code":"P <- 20 pow_nms <- c(\"pow_minimax\",  \"pow_minimax_trunc\", \"pow_minimax_pval\",              \"pow_Bayes_01\",  \"pow_Bayes_quad\",  \"pow_Bayes_quad_constr\",               \"pow_delta\", \"pow_js\", \"pow_vGvG\") for (pow in pow_nms) {     assign(pow, rep(0, P + 1), envir = .GlobalEnv) } delta_x <- delta_y <- seq(0, .4, length.out = P + 1)  run_simulation <- function() {     for (j in 1:(P + 1)) {         ## ########## ##         ## simulating ##         ## ########## ##         Zn <- simulate(delta_x[j], delta_y[j])         ## ####### ##         ## testing ##         ## ####### ##         R_minimax <- mediation_test_minimax(Zn,                                             alpha = alpha,                                             truncation = 0,                                             sample_size = sample_size,                                             compute_pvals = TRUE)         R_minimax_pval <- R_minimax$pval <= alpha         R_minimax_trunc <- mediation_test_minimax(Zn,                                                   alpha = alpha,                                                   truncation = truncation,                                                   sample_size = sample_size,                                                   compute_pvals = FALSE)         R_Bayes_01 <- mediation_test_Bayes(Zn,                                            map_01,                                            truncation = 0)         R_Bayes_quad <- mediation_test_Bayes(Zn,                                              map_quad,                                              truncation = 0)         R_Bayes_quad_constr <- mediation_test_Bayes(Zn,                                                     map_quad_trunc,                                                     truncation = truncation)         R_delta <- delta_method_test(Zn, alpha)         R_js <- joint_significance_test(Zn, alpha, quantile_function)         R_vGvG <- vGvG_test(Zn, alpha)         ## ################ ##         ## evaluating power ##         ## ################ ##         pow_minimax[j] <- mean(R_minimax$decision)         pow_minimax_pval[j] <- mean(R_minimax_pval)         pow_minimax_trunc[j] <- mean(R_minimax_trunc$decision)         pow_Bayes_01[j] <- mean(R_Bayes_01$decision)         pow_Bayes_quad[j] <- mean(R_Bayes_quad$decision)         pow_Bayes_quad_constr[j] <- mean(R_Bayes_quad_constr$decision)         pow_delta[j] <- mean(R_delta)         pow_js[j] <- mean(R_js)         pow_vGvG[j] <- mean(R_vGvG)     }     list(pow_minimax, pow_minimax_trunc, pow_Bayes_01, pow_Bayes_quad,          pow_Bayes_quad_constr, pow_delta, pow_js, pow_minimax_pval, pow_vGvG) }  ## ###################### ## ## running the simulation ## ## ###################### ## pow_a <- run_simulation()  ## ####################### ## ## colllecting the results ## ## ####################### ## pow_scenario_a <- tibble(delta = rep(delta_x, 9),                          power = unlist(pow_a),                          test = c(rep(\"MMO\", P + 1),                                   rep(\"MMO trunc\", P + 1),                                   rep(\"BRO 0-1\", P + 1),                                   rep(\"BRO quad\", P + 1),                                   rep(\"BRO q-cnst\", P + 1),                                   rep(\"Delta\", P + 1),                                   rep(\"JS\", P + 1),                                   rep(\"MMO pval\", P + 1),                                   rep(\"vGvG\", P + 1)))  fig_scenario_a <- ggplot(data = pow_scenario_a) +      geom_line(aes(         x = delta, y = power, group = test,         color = test,         ),         linewidth = 0.5) +      geom_vline(xintercept = 0) +      geom_hline(yintercept = 0) +      geom_hline(yintercept = alpha, linetype = \"dashed\") +     xlab(expression(delta[x])) (fig_scenario_a)"},{"path":"https://achambaz.github.io/mediation.test/articles/mediation-test.html","id":"scenario-b","dir":"Articles","previous_headings":"","what":"3 Scenario (b)","title":"mediation-test","text":"now turn scenario (b).  trends largely scenario (). main difference quadratic loss versions Bayes risk optimal test slightly conservative respect 0.05 null, albeit less conservative minimax optimal pp-value-based test. , tests trade power loss smaller values δx\\delta_x (values less 0.25) slightly improved power larger values δx\\delta_x (0.35–0.55). Since δy\\delta_y fixed 0.2, power tests appears plateau little 0.3.","code":"delta_x <- seq(0, .6, length.out = P + 1) delta_y <- rep(.2, length(delta_x))  ## ###################### ## ## running the simulation ## ## ###################### ## pow_b <- run_simulation()  ## ####################### ## ## colllecting the results ## ## ####################### ## pow_scenario_b <- tibble(delta = rep(delta_x, 9),                          power = unlist(pow_b),                          test = c(rep(\"MMO\", P + 1),                                   rep(\"MMO trunc\", P + 1),                                   rep(\"BRO 0-1\", P + 1),                                   rep(\"BRO quad\", P + 1),                                   rep(\"BRO q-cnst\", P + 1),                                   rep(\"Delta\", P + 1),                                   rep(\"JS\", P + 1),                                   rep(\"MMO pval\", P + 1),                                   rep(\"vGvG\", P + 1)))  fig_scenario_b <- ggplot(data = pow_scenario_b) +      geom_line(aes(         x = delta, y = power, group = test,         color = test,         ),         linewidth = 0.5) +      geom_vline(xintercept = 0) +      geom_hline(yintercept = 0) +      geom_hline(yintercept = alpha, linetype = \"dashed\") +     xlab(expression(delta[x])) (fig_scenario_b)"},{"path":"https://achambaz.github.io/mediation.test/articles/mediation-test.html","id":"scenario-c","dir":"Articles","previous_headings":"","what":"4 Scenario (c)","title":"mediation-test","text":"now turn scenario (c).  tests approximately preserve type 1 error. Moreover, performances tests except delta method test converge around δx=0.55\\delta_x=0.55. However, minimax optimal test exhibits anti-conservative behavior due normal approximation bit concentrated sample size 50. motivates conducting simulation study scenario (c), substituting tt-distribution standard normal approximation – see next section.","code":"delta_x <- seq(0, .8, length.out = P + 1) delta_y <- rep(0, length(delta_x))  ## ###################### ## ## running the simulation ## ## ###################### ## pow_c <- run_simulation()  ## ####################### ## ## colllecting the results ## ## ####################### ## pow_scenario_c <- tibble(delta = rep(delta_x, 9),                          power = unlist(pow_c),                          test = c(rep(\"MMO\", P + 1),                                   rep(\"MMO trunc\", P + 1),                                   rep(\"BRO 0-1\", P + 1),                                   rep(\"BRO quad\", P + 1),                                   rep(\"BRO q-cnst\", P + 1),                                   rep(\"Delta\", P + 1),                                   rep(\"JS\", P + 1),                                   rep(\"MMO pval\", P + 1),                                   rep(\"vGvG\", P + 1)))  fig_scenario_c <- ggplot(data = pow_scenario_c) +      geom_line(aes(         x = delta, y = power, group = test,         color = test,         ),         linewidth = 0.5) +      geom_vline(xintercept = 0) +      geom_hline(yintercept = 0) +      geom_hline(yintercept = alpha, linetype = \"dashed\") +     xlab(expression(delta[x])) (fig_scenario_c)"},{"path":"https://achambaz.github.io/mediation.test/articles/mediation-test.html","id":"scenario-c-revisited","dir":"Articles","previous_headings":"","what":"5 Scenario (c) revisited","title":"mediation-test","text":"revisit scenario (c), using tt-distribution (n−1)(n-1) degrees freedom instead standard normal approximation minimax optimal tests. purpose, simply redefine object quantile_function.  use tt-distribution approximation expected effect. type 1 error now much closer 0.05 across entire range null hypothesis parameter space consider. , performances tests except delta method converge around δx=0.55\\delta_x=0.55.","code":"delta_x <- seq(0, .8, length.out = P + 1) delta_y <- rep(0, length(delta_x))  sample_size <- as.integer(n_obs - 1) quantile_function <- \\(t) qt(t, df = sample_size)  ## ###################### ## ## running the simulation ## ## ###################### ## pow_d <- run_simulation()  ## ####################### ## ## colllecting the results ## ## ####################### ## pow_scenario_d <- tibble(delta = rep(delta_x, 9),                          power = unlist(pow_d),                          test = c(rep(\"MMO\", P + 1),                                   rep(\"MMO trunc\", P + 1),                                   rep(\"BRO 0-1\", P + 1),                                   rep(\"BRO quad\", P + 1),                                   rep(\"BRO q-cnst\", P + 1),                                   rep(\"Delta\", P + 1),                                   rep(\"JS\", P + 1),                                   rep(\"MMO pval\", P + 1),                                   rep(\"vGvG\", P + 1)))  fig_scenario_d <- ggplot(data = pow_scenario_d) +      geom_line(aes(         x = delta, y = power, group = test,         color = test,         ),         linewidth = 0.5) +      geom_vline(xintercept = 0) +      geom_hline(yintercept = 0) +      geom_hline(yintercept = alpha, linetype = \"dashed\") +     xlab(expression(delta[x])) (fig_scenario_d)"},{"path":[]},{"path":"https://achambaz.github.io/mediation.test/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Antoine Chambaz. Author, maintainer. Caleb Miles. Author.","code":""},{"path":"https://achambaz.github.io/mediation.test/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chambaz , Miles C (2025). mediation.test: Powerful Tests Composite Null Hypothesis Arising Mediation Analysis. R package version 1.2.0, https://achambaz.github.io/mediation.test/.","code":"@Manual{,   title = {mediation.test: More Powerful Tests of the Composite Null Hypothesis Arising in Mediation Analysis},   author = {Antoine Chambaz and Caleb Miles},   year = {2025},   note = {R package version 1.2.0},   url = {https://achambaz.github.io/mediation.test/}, }"},{"path":"https://achambaz.github.io/mediation.test/index.html","id":"mediationtest","dir":"","previous_headings":"","what":"More Powerful Tests of the Composite Null Hypothesis Arising in Mediation Analysis","title":"More Powerful Tests of the Composite Null Hypothesis Arising in Mediation Analysis","text":"Powerful Tests Composite Null Hypothesis Arising Mediation Analysis mediation.test R package implements powerful tests composite null hypothesis arising mediation analysis. developed . Chambaz (MAP5, UMR CNRS 8145, Université Paris Cité) & Caleb Miles (Department Biostatistics, Columbia University Mailman School Public Health).","code":""},{"path":"https://achambaz.github.io/mediation.test/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"More Powerful Tests of the Composite Null Hypothesis Arising in Mediation Analysis","text":"mediation_test() function mediation.test package tests composite null hypothesis “δx * δy = 0” alternative “δx * δy ≠ 0”.","code":"> library(\"mediation.test\") > > example(mediation_test_minimax) > example(mediation_test_minimax_BH) > > example(compute_map_rejection_probs) > example(mediation_test_Bayes)"},{"path":"https://achambaz.github.io/mediation.test/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"More Powerful Tests of the Composite Null Hypothesis Arising in Mediation Analysis","text":"cite package, see","code":"> citation(\"mediation.test\") > toBibtex(citation(\"mediation.test\"))"},{"path":"https://achambaz.github.io/mediation.test/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"More Powerful Tests of the Composite Null Hypothesis Arising in Mediation Analysis","text":"stable version development version available via GitHub can installed R : ","code":"devtools::install_github(\"achambaz/mediation.test\", ref = \"main\") devtools::install_github(\"achambaz/mediation.test\", ref = \"develop\")"},{"path":"https://achambaz.github.io/mediation.test/reference/compute_map_rejection_probs.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing 'map's of rejection probabilities for the Bayes risk optimal test — compute_map_rejection_probs","title":"Computing 'map's of rejection probabilities for the Bayes risk optimal test — compute_map_rejection_probs","text":"Computes  \"map\" rejection  probabilities Bayes  risk optimal test  composite null \"\\(\\delta_x \\times  \\delta_y=0\\)\" alternative  \"\\(\\delta_x  \\times  \\delta_y\\neq  0\\)\" based    test statistic real  plane.  Bayes risk induced  either 0-1   bounded  quadratic  loss  function,  wished  type- error  , possibly, truncation parameter.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/compute_map_rejection_probs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing 'map's of rejection probabilities for the Bayes risk optimal test — compute_map_rejection_probs","text":"","code":"compute_map_rejection_probs(   alpha = 0.05,   K = 16,   loss = c(\"0-1\", \"quadratic\"),   truncation = 0,   return_solver = FALSE )"},{"path":"https://achambaz.github.io/mediation.test/reference/compute_map_rejection_probs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing 'map's of rejection probabilities for the Bayes risk optimal test — compute_map_rejection_probs","text":"alpha positive  numeric, wished type- error (default value 0.05). K  integer parametrizing  discretization  null hypothesis  test   plane.   complexity  resulting optimization  problem  \\(O(K^2)\\),  'K'  neither  small large. default  value 'K=16'.  recommend 'K=64' sensible value enforce \\(2 \\leq K \\leq 128\\). loss  character,   either  \"0-1\"  (default   value)  \"quadratic\", indicate loss function consider. truncation nonnegative  numeric, enabling bound away rejection region  null hypothesis space.  default value 0, meaning truncation required. return_solver logical, request 'lpSolve' object returned  ('TRUE')  ( 'FALSE', default). Note  'lpSolve' object can quite big.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/compute_map_rejection_probs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing 'map's of rejection probabilities for the Bayes risk optimal test — compute_map_rejection_probs","text":" '2K  x 2K'  matrix whose  '(,j)'  coefficient  probability  reject null   test statistic falls  square \\([b(-1-K)/K,  b(-K)/K] \\times [b(j-1-K)/K,  b(j-K)/K]\\). 'return_solver'  'TRUE',   matrix  attribute  called 'solver'   complete  output  optimization  function 'lpSolve::lp' used determine  probabilities.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/compute_map_rejection_probs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computing 'map's of rejection probabilities for the Bayes risk optimal test — compute_map_rejection_probs","text":"","code":"## one of the four outputs of 'compute_map_rejection_probs' stored in the package head(map_01_0.05, c(5, 5))  #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    1    1    1    1 #> [2,]    1    1    1    1    1 #> [3,]    1    1    1    1    1 #> [4,]    1    1    1    1    1 #> [5,]    1    1    1    1    1 map <- compute_map_rejection_probs(alpha = 0.05, K = 16, loss = \"0-1\") plot(map)"},{"path":"https://achambaz.github.io/mediation.test/reference/map_01_0.01.html","id":null,"dir":"Reference","previous_headings":"","what":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, 0-1 loss function and 0.01 type-I error — map_01_0.01","title":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, 0-1 loss function and 0.01 type-I error — map_01_0.01","text":"map  rejection probabilities Bayes risk  optimal test composite null  \"\\(\\delta_x \\times \\delta_y=0\\)\"  alternative \"\\(\\delta_x \\times \\delta_y\\neq  0\\)\" based test  statistic real plane   induced  0-1  loss function   0.01 type-error. truncation required.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/map_01_0.01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, 0-1 loss function and 0.01 type-I error — map_01_0.01","text":"","code":"map_01_0.01"},{"path":[]},{"path":"https://achambaz.github.io/mediation.test/reference/map_01_0.01.html","id":"map-","dir":"Reference","previous_headings":"","what":"map_01_0.01","title":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, 0-1 loss function and 0.01 type-I error — map_01_0.01","text":"square matrix 128 rows columns.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/map_01_0.05.html","id":null,"dir":"Reference","previous_headings":"","what":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, 0-1 loss function and 0.05 type-I error — map_01_0.05","title":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, 0-1 loss function and 0.05 type-I error — map_01_0.05","text":"'map' rejection probabilities Bayes risk optimal test composite null  \"\\(\\delta_x \\times \\delta_y=0\\)\"  alternative \"\\(\\delta_x \\times \\delta_y\\neq  0\\)\" based test  statistic real plane   induced  0-1  loss function   0.05 type-error. truncation required.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/map_01_0.05.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, 0-1 loss function and 0.05 type-I error — map_01_0.05","text":"","code":"map_01_0.05"},{"path":[]},{"path":"https://achambaz.github.io/mediation.test/reference/map_01_0.05.html","id":"map-","dir":"Reference","previous_headings":"","what":"map_01_0.05","title":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, 0-1 loss function and 0.05 type-I error — map_01_0.05","text":"square matrix 128 rows columns.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/map_quad_0.01.html","id":null,"dir":"Reference","previous_headings":"","what":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, quadratic loss function and 0.01 type-I error — map_quad_0.01","title":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, quadratic loss function and 0.01 type-I error — map_quad_0.01","text":"map  rejection probabilities Bayes risk  optimal test composite null  \"\\(\\delta_x \\times \\delta_y=0\\)\"  alternative \"\\(\\delta_x \\times \\delta_y\\neq  0\\)\" based test  statistic real plane induced quadratic loss function 0.01 type-error. truncation required.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/map_quad_0.01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, quadratic loss function and 0.01 type-I error — map_quad_0.01","text":"","code":"map_quad_0.01"},{"path":[]},{"path":"https://achambaz.github.io/mediation.test/reference/map_quad_0.01.html","id":"map-quad-","dir":"Reference","previous_headings":"","what":"map_quad_0.01","title":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, quadratic loss function and 0.01 type-I error — map_quad_0.01","text":"square matrix 128 rows columns.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/map_quad_0.01_0.1.html","id":null,"dir":"Reference","previous_headings":"","what":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, quadratic loss function, 0.01 type-I error and 0.1 truncation — map_quad_0.01_0.1","title":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, quadratic loss function, 0.01 type-I error and 0.1 truncation — map_quad_0.01_0.1","text":"map  rejection probabilities Bayes risk  optimal test composite null  \"\\(\\delta_x \\times \\delta_y=0\\)\"  alternative \"\\(\\delta_x \\times \\delta_y\\neq  0\\)\" based test  statistic real plane induced quadratic loss function 0.01 type-error, /!\\ 0.1 truncation /!\\.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/map_quad_0.01_0.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, quadratic loss function, 0.01 type-I error and 0.1 truncation — map_quad_0.01_0.1","text":"","code":"map_quad_0.01_0.1"},{"path":[]},{"path":"https://achambaz.github.io/mediation.test/reference/map_quad_0.01_0.1.html","id":"map-quad-","dir":"Reference","previous_headings":"","what":"map_quad_0.01_0.1","title":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, quadratic loss function, 0.01 type-I error and 0.1 truncation — map_quad_0.01_0.1","text":"square matrix 128 rows columns.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/map_quad_0.05.html","id":null,"dir":"Reference","previous_headings":"","what":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, quadratic loss function and 0.05 type-I error — map_quad_0.05","title":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, quadratic loss function and 0.05 type-I error — map_quad_0.05","text":"map  rejection probabilities Bayes risk  optimal test composite null  \"\\(\\delta_x \\times \\delta_y=0\\)\"  alternative \"\\(\\delta_x \\times \\delta_y\\neq  0\\)\" based test  statistic real plane induced quadratic loss function 0.05 type-error. truncation required.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/map_quad_0.05.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, quadratic loss function and 0.05 type-I error — map_quad_0.05","text":"","code":"map_quad_0.05"},{"path":[]},{"path":"https://achambaz.github.io/mediation.test/reference/map_quad_0.05.html","id":"map-quad-","dir":"Reference","previous_headings":"","what":"map_quad_0.05","title":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, quadratic loss function and 0.05 type-I error — map_quad_0.05","text":"square matrix 128 rows columns.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/map_quad_0.05_0.1.html","id":null,"dir":"Reference","previous_headings":"","what":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, quadratic loss function, 0.05 type-I error and 0.1 truncation — map_quad_0.05_0.1","title":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, quadratic loss function, 0.05 type-I error and 0.1 truncation — map_quad_0.05_0.1","text":"map  rejection probabilities Bayes risk  optimal test composite null  \"\\(\\delta_x \\times \\delta_y=0\\)\"  alternative \"\\(\\delta_x \\times \\delta_y\\neq  0\\)\" based test  statistic real plane induced quadratic loss function 0.05 type-error, /!\\ 0.1 truncation /!\\.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/map_quad_0.05_0.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, quadratic loss function, 0.05 type-I error and 0.1 truncation — map_quad_0.05_0.1","text":"","code":"map_quad_0.05_0.1"},{"path":[]},{"path":"https://achambaz.github.io/mediation.test/reference/map_quad_0.05_0.1.html","id":"map-quad-","dir":"Reference","previous_headings":"","what":"map_quad_0.05_0.1","title":"'Map' of rejection probabilities for the Bayes risk optimal testing procedure, quadratic loss function, 0.05 type-I error and 0.1 truncation — map_quad_0.05_0.1","text":"square matrix 128 rows columns.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/mediation.test-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mediation.test: More Powerful Tests of the Composite Null Hypothesis Arising in Mediation Analysis — mediation.test-package","title":"mediation.test: More Powerful Tests of the Composite Null Hypothesis Arising in Mediation Analysis — mediation.test-package","text":"packages proposes powerful tests composite null hypothesis arising mediation analysis.","code":""},{"path":[]},{"path":"https://achambaz.github.io/mediation.test/reference/mediation.test-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mediation.test: More Powerful Tests of the Composite Null Hypothesis Arising in Mediation Analysis — mediation.test-package","text":"Maintainer: Antoine Chambaz antoine.chambaz@u-paris.fr Authors: Caleb Miles cm3825@cumc.columbia.edu","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/mediation_test_Bayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayes risk optimal testing — mediation_test_Bayes","title":"Bayes risk optimal testing — mediation_test_Bayes","text":"Carries     Bayes   risk  optimal  test      composite  null \"\\(\\delta_x    \\times     \\delta_y=0\\)\"           alternative \"\\(\\delta_x \\times \\delta_y\\neq  0\\)\" based test  statistic real plane.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/mediation_test_Bayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayes risk optimal testing — mediation_test_Bayes","text":"","code":"mediation_test_Bayes(t, map, truncation = 0)"},{"path":"https://achambaz.github.io/mediation.test/reference/mediation_test_Bayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayes risk optimal testing — mediation_test_Bayes","text":"t  vector  consisting  two  numerics,  test statistic  real  plane,  'n x 2'  matrix  test statistics. map \"map\" rejection  probabilities – 'map'  item output function compute_map_rejection_probs. truncation nonnegative  numeric used bound rejection region away  null  hypothesis space.  Defaults 0,  case  rejection region minimax optimal.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/mediation_test_Bayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayes risk optimal testing — mediation_test_Bayes","text":"list, consisting  : t: vector two numerics, test statistic, 'n x 2' matrix test  statistics; alpha:  numeric,  type-error; truncation:  nonnegative  numeric,  used  bound  rejection    region   away         null   hypothesis    space decision:  vector  logicals, FALSE   null hypothesis  can   rejected   alternative  level 'alpha'  TRUE  otherwise; pval: vector  numerics,   p-values   tests,  'NA'    case; method:  character \"Bayes\"; map:  \"map\" rejection probabilities  –  'map' item  output  function compute_map_rejection_probs.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/mediation_test_Bayes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayes risk optimal testing — mediation_test_Bayes","text":"details, refer  technical report  \"Optimal Tests Composite Null Hypothesis Arising Mediation Analysis\", Miles & Chambaz (2024), https://arxiv.org/abs/2107.07575","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/mediation_test_Bayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayes risk optimal testing — mediation_test_Bayes","text":"","code":"n <- 10 x <- MASS::mvrnorm(2 * n, mu = c(0, 0), Sigma = diag(c(1, 1))) delta <- matrix(stats::runif(4 * n, min = -3, max = 3), ncol = 2) epsilon <- stats::rbinom(n, 1, 1/2) delta <- delta * cbind(c(epsilon, rep(1, n)),                        c(1 - epsilon, rep(1, n))) x <- x + delta (mt_01_0.05 <- mediation_test_Bayes(x, map = map_01_0.05)) #> Testing the composite null 'delta_x * delta_y = 0' against its alternative 'delta_x * delta_y != 0': #> * method: #> Bayes  #> * test statictic: #>            [,1]         [,2] #> [1,] -0.3006522 -1.400043517 #> [2,]  0.2408739  0.255317055 #> [3,]  1.3045435 -3.013797599 #> [4,] -1.9974754 -0.005571287 #> [5,] -2.0080539  0.621552721 #> [6,]  0.0974451  2.161636093 #> ... #> * wished type-I error: #> [1] 0.05 #> * loss function: #> [1] \"0-1\" #> * user-supplied truncation parameter: #> [1] 0 #> * decision [1 rejection(s) overall]:  #> cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #> ... #> * (conservative) p-value: #> [1] NA #> ... plot(mt_01_0.05)   (mt_quad_0.05_0.1 <- mediation_test_Bayes(x, map = map_quad_0.05_0.1)) #> Testing the composite null 'delta_x * delta_y = 0' against its alternative 'delta_x * delta_y != 0': #> * method: #> Bayes  #> * test statictic: #>            [,1]         [,2] #> [1,] -0.3006522 -1.400043517 #> [2,]  0.2408739  0.255317055 #> [3,]  1.3045435 -3.013797599 #> [4,] -1.9974754 -0.005571287 #> [5,] -2.0080539  0.621552721 #> [6,]  0.0974451  2.161636093 #> ... #> * wished type-I error: #> [1] 0.05 #> * loss function: #> [1] \"quadratic\" #> * user-supplied truncation parameter: #> [1] 0 #> warning: used a truncation parameter (0.000) different from the map's truncation parameter (0.100) #> * decision [2 rejection(s) overall]:  #> cannot reject the null for its alternative with confidence 0.050 #>  can reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #> ... #> * (conservative) p-value: #> [1] NA #> ... plot(mt_quad_0.05_0.1)"},{"path":"https://achambaz.github.io/mediation.test/reference/mediation_test_minimax.html","id":null,"dir":"Reference","previous_headings":"","what":"Minimax optimal testing — mediation_test_minimax","title":"Minimax optimal testing — mediation_test_minimax","text":"Carries       minimax   optimal  test       composite   null \"\\(\\delta_x    \\times     \\delta_y=0\\)\"           alternative \"\\(\\delta_x \\times \\delta_y\\neq  0\\)\" based test  statistic real plane.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/mediation_test_minimax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minimax optimal testing — mediation_test_minimax","text":"","code":"mediation_test_minimax(   t,   alpha = 0.05,   truncation = 0,   sample_size = Inf,   compute_pvals = TRUE )"},{"path":"https://achambaz.github.io/mediation.test/reference/mediation_test_minimax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Minimax optimal testing — mediation_test_minimax","text":"t  vector  consisting  two  numerics,  test statistic  real  plane,  'n x 2'  matrix  test statistics. alpha positive numeric, wished type-error. truncation nonnegative  numeric used bound rejection region away  null  hypothesis space.  Defaults 0,  case  rejection region minimax optimal. sample_size integer  (larger  one), size  sample used  derive  test statistic. Defaults  'Inf', meaning ,  null hypothesis, test statistic  drawn \\(N_2(0,I_2)\\) law.   integer finite, ,  null hypothesis, test statistic drawn product two Student laws 'sample_size-1' degrees freedom. compute_pvals   logical  indicating   whether    (conservative) p-values computed.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/mediation_test_minimax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Minimax optimal testing — mediation_test_minimax","text":"list, consisting  : t: vector two numerics, test statistic, 'n x 2' matrix test  statistics; alpha:  numeric,  type-error; truncation:  nonnegative  numeric,  used  bound  rejection    region   away         null   hypothesis    space sample_size: integer,  size  sample used derive    test   statistic decision:   vector  logicals, FALSE   null hypothesis can  rejected   alternative   level 'alpha'   TRUE  otherwise; pval: vector  numerics,  (conservative) p-values  tests; method: character \"minimax\".","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/mediation_test_minimax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Minimax optimal testing — mediation_test_minimax","text":"details, refer  technical report  \"Optimal Tests Composite Null Hypothesis Arising Mediation Analysis\", Miles & Chambaz (2024), https://arxiv.org/abs/2107.07575","code":""},{"path":[]},{"path":"https://achambaz.github.io/mediation.test/reference/mediation_test_minimax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Minimax optimal testing — mediation_test_minimax","text":"","code":"n <- 10 x <- MASS::mvrnorm(2 * n, mu = c(0, 0), Sigma = diag(c(1, 1))) delta <- matrix(stats::runif(4 * n, min = -3, max = 3), ncol = 2) epsilon <- stats::rbinom(n, size = 1, prob = 1/2) delta <- delta * cbind(c(epsilon, rep(1, n)),                        c(1 - epsilon, rep(1, n))) x <- x + delta (mt <- mediation_test_minimax(x, alpha = 1/20)) #> Testing the composite null 'delta_x * delta_y = 0' against its alternative 'delta_x * delta_y != 0': #> * method: #> minimax  #> * test statictic: #>            [,1]       [,2] #> [1,] -2.6409670 -0.9758506 #> [2,]  2.6123343 -0.6235647 #> [3,] -1.1148832  0.1316706 #> [4,]  1.8182577  0.4886288 #> [5,]  0.3819511 -4.4230687 #> [6,]  2.4769649 -1.4707363 #> ... #> * wished type-I error: #> [1] 0.05 #> * user-supplied truncation parameter: #> [1] 0 #> * size  of the sample used to derive the  test statistic ('Inf' to use a Gaussian approximation; otherwise, use a product of Student laws): #> [1] Inf #> * decision [3 rejection(s) overall]:  #> cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #> ... #> * (conservative) p-value: #> [1] 0.3291385 0.5329135 0.8952448 0.6251045 0.7024976 0.1413624 #> ... plot(mt) #> Some points fall outside the range of the figure."},{"path":"https://achambaz.github.io/mediation.test/reference/mediation_test_minimax_BH.html","id":null,"dir":"Reference","previous_headings":"","what":"Minimax optimal testing, aiming for a control of false discovery rate à la Benjamini-Hochberg — mediation_test_minimax_BH","title":"Minimax optimal testing, aiming for a control of false discovery rate à la Benjamini-Hochberg — mediation_test_minimax_BH","text":"Carries       minimax   optimal  test       composite   null \"\\(\\delta_x    \\times     \\delta_y=0\\)\"           alternative \"\\(\\delta_x \\times \\delta_y\\neq  0\\)\" based test  statistic real  plane,   aiming    control    false  discovery  rate   à  la Benjamini-Hochberg.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/mediation_test_minimax_BH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minimax optimal testing, aiming for a control of false discovery rate à la Benjamini-Hochberg — mediation_test_minimax_BH","text":"","code":"mediation_test_minimax_BH(   t,   alpha = 0.05,   truncation = 0,   BH = c(\"statistics\", \"pval\"),   sample_size = Inf,   K = 10L )"},{"path":"https://achambaz.github.io/mediation.test/reference/mediation_test_minimax_BH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Minimax optimal testing, aiming for a control of false discovery rate à la Benjamini-Hochberg — mediation_test_minimax_BH","text":"t  vector  consisting  two  numerics,  test statistic  real  plane,  'n x 2'  matrix  test statistics. alpha positive numeric, wished false discovery rate. truncation nonnegative  numeric used bound rejection region away  null  hypothesis space.  Defaults 0,  case  rejection region minimax optimal. BH character,  either \"statistics\"  \"pval\", determining whether Benjamini-Hochberg  testing procedure based  test statistics (conservative) p-values. sample_size integer  (larger  one), size  sample used  derive  test statistic. Defaults  'Inf', meaning ,  null hypothesis, test statistic  drawn \\(N_2(0,I_2)\\) law.   integer finite, ,  null hypothesis, test statistic drawn product two Student laws 'sample_size-1' degrees freedom. K integer (10  default) used internally speed Benjamini-Hochberg  testing procedure    based   test statistics (details  Details section). Must smaller 'nrow(t)'. @details  Suppose    carrying  \\(J\\)  tests.   Starting  \\(j=1\\),    increment  \\(j\\)   fewer    \\(j\\)  null hypotheses    rejected   level  \\(\\alpha\\times   j/J\\)   K consecutive iterations.   Eventually, reject  null hypotheses level \\(\\alpha \\times  jj/J\\), \\(jj\\)  largest integer far least \\(jj\\) null hypotheses rejected level.     details,   refer     technical  report \"Optimal Tests Composite Null Hypothesis Arising Mediation Analysis\", Miles & Chambaz (2024), https://arxiv.org/abs/2107.07575","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/mediation_test_minimax_BH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Minimax optimal testing, aiming for a control of false discovery rate à la Benjamini-Hochberg — mediation_test_minimax_BH","text":"list, consisting  : t: vector two numerics, test statistic, 'n x 2' matrix test statistics; alpha: numeric,  false discovery rate; truncation:  nonnegative numeric, used  bound   rejection   region  away       null  hypothesis   space sample_size: integer,  size  sample used derive    test   statistic decision:   vector  logicals, FALSE   null hypothesis can  rejected  alternative  false discovery  rate 'alpha'  TRUE otherwise; pval:   vector    numerics,  original  (conservative)  p-values   tests; method: character  \"minimax_BH\", BH:  character, either 'statistics'   'pval',  determining whether   Benjamini-Hochberg testing  procedure    based    test  statistics     (conservative) p-values; K: integer K used internally speed Benjamini-Hochberg procedure based test statistics.","code":""},{"path":[]},{"path":"https://achambaz.github.io/mediation.test/reference/mediation_test_minimax_BH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Minimax optimal testing, aiming for a control of false discovery rate à la Benjamini-Hochberg — mediation_test_minimax_BH","text":"","code":"n <- 100 x <- MASS::mvrnorm(2 * n, mu = c(0, 0), Sigma = diag(c(1, 1))) delta <- matrix(stats::runif(4 * n, min = -5, max = 5), ncol = 2) epsilon <- stats::rbinom(n, size = 1, prob = 1/2) delta <- delta * cbind(c(epsilon, rep(1, n)),                        c(1 - epsilon, rep(1, n))) x <- x + delta mt_BH_stats <- mediation_test_minimax_BH(x, alpha = 1/20, BH = \"statistics\") (sum(mt_BH_stats$decision)) #> [1] 24 mt_BH_pval <- mediation_test_minimax_BH(x, alpha = 1/20, BH = \"pval\") (sum(mt_BH_pval$decision)) #> [1] 11"},{"path":"https://achambaz.github.io/mediation.test/reference/plot.map.rejection.probabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots the 'map' of rejection probabilities for the Bayes risk optimal test — plot.map.rejection.probabilities","title":"Plots the 'map' of rejection probabilities for the Bayes risk optimal test — plot.map.rejection.probabilities","text":"Plots 'map' rejection probabilities  Bayes risk optimal test   composite  null  \"\\(\\delta_x \\times  \\delta_y=0\\)\"   alternative  \"\\(\\delta_x  \\times  \\delta_y\\neq  0\\)\" based    test statistic real  plane.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/plot.map.rejection.probabilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots the 'map' of rejection probabilities for the Bayes risk optimal test — plot.map.rejection.probabilities","text":"","code":"# S3 method for class 'map.rejection.probabilities' plot(x, filename = NULL, return_fig = FALSE, ...)"},{"path":"https://achambaz.github.io/mediation.test/reference/plot.map.rejection.probabilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots the 'map' of rejection probabilities for the Bayes risk optimal test — plot.map.rejection.probabilities","text":"x output function . filename Either NULL (defaults) file  name create disk. return_fig logical, request  'ggplot2' object returned ('TRUE') ('FALSE'). ... used.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/plot.map.rejection.probabilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots the 'map' of rejection probabilities for the Bayes risk optimal test — plot.map.rejection.probabilities","text":"Nothing unless 'return_fig' set 'TRUE', case function returns 'ggplot2' object.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/plot.map.rejection.probabilities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots the 'map' of rejection probabilities for the Bayes risk optimal test — plot.map.rejection.probabilities","text":"","code":"map <- compute_map_rejection_probs(alpha = 0.05, K = 16, loss = \"0-1\") plot(map)"},{"path":"https://achambaz.github.io/mediation.test/reference/plot.mediation.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots the output of functions mediation_test_minimax and mediation_test_Bayes with the rejection region. — plot.mediation.test","title":"Plots the output of functions mediation_test_minimax and mediation_test_Bayes with the rejection region. — plot.mediation.test","text":"Plots output functions mediation_test_minimax mediation_test_Bayes rejection region.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/plot.mediation.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots the output of functions mediation_test_minimax and mediation_test_Bayes with the rejection region. — plot.mediation.test","text":"","code":"# S3 method for class 'mediation.test' plot(   x,   filename = NULL,   return_fig = FALSE,   xlim = c(-4, 4),   ylim = c(-4, 4),   ... )"},{"path":"https://achambaz.github.io/mediation.test/reference/plot.mediation.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots the output of functions mediation_test_minimax and mediation_test_Bayes with the rejection region. — plot.mediation.test","text":"x output functions mediation_test_minimax mediation_test_Bayes. filename Either NULL (defaults) file  name create disk. return_fig logical, request  'ggplot2' object returned ('TRUE') ('FALSE'). xlim, ylim Two vectors numerics,  wished x-axis y-axis ranges (default 'c(-4, 4)'). ... used.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/plot.mediation.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots the output of functions mediation_test_minimax and mediation_test_Bayes with the rejection region. — plot.mediation.test","text":"Nothing unless 'return_fig' set 'TRUE', case function returns 'ggplot2' object.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/plot.mediation.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots the output of functions mediation_test_minimax and mediation_test_Bayes with the rejection region. — plot.mediation.test","text":"","code":"n <- 10 x <- MASS::mvrnorm(n, mu = c(0, 0), Sigma = diag(c(1, 1))) delta <- matrix(stats::runif(2 * n, min = -3, max = 3), ncol = 2) epsilon <- stats::rbinom(n, 1, 1/2) delta <- delta * cbind(epsilon, 1 - epsilon) x <- x + delta (mt <- mediation_test_minimax(x, alpha = 1/20)) #> Testing the composite null 'delta_x * delta_y = 0' against its alternative 'delta_x * delta_y != 0': #> * method: #> minimax  #> * test statictic: #>            [,1]       [,2] #> [1,]  1.2484688 -0.5376506 #> [2,] -1.8701727 -0.4524261 #> [3,] -1.6003791 -0.4392910 #> [4,]  0.5331733 -0.6162231 #> [5,] -2.5484056  0.4416346 #> [6,] -0.3624240  2.7990407 #> ... #> * wished type-I error: #> [1] 0.05 #> * user-supplied truncation parameter: #> [1] 0 #> * size  of the sample used to derive the  test statistic ('Inf' to use a Gaussian approximation; otherwise, use a product of Student laws): #> [1] Inf #> * decision [0 rejection(s) overall]:  #> cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #> ... #> * (conservative) p-value: #> [1] 0.5908183 0.6509621 0.6604507 0.2182841 0.6587537 0.7170352 #> ... plot(mt)"},{"path":"https://achambaz.github.io/mediation.test/reference/print.mediation.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints the output of functions mediation_test_minimax and mediation_test_Bayes. — print.mediation.test","title":"Prints the output of functions mediation_test_minimax and mediation_test_Bayes. — print.mediation.test","text":"Prints output functions mediation_test_minimax mediation_test_Bayes.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/print.mediation.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints the output of functions mediation_test_minimax and mediation_test_Bayes. — print.mediation.test","text":"","code":"# S3 method for class 'mediation.test' print(x, n = 6L, ...)"},{"path":"https://achambaz.github.io/mediation.test/reference/print.mediation.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints the output of functions mediation_test_minimax and mediation_test_Bayes. — print.mediation.test","text":"x output function mediation_test_minimax mediation_test_Bayes. n integer indicating many individual tests printed. ... used.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/print.mediation.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints the output of functions mediation_test_minimax and mediation_test_Bayes. — print.mediation.test","text":"Nothing.","code":""},{"path":"https://achambaz.github.io/mediation.test/reference/print.mediation.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prints the output of functions mediation_test_minimax and mediation_test_Bayes. — print.mediation.test","text":"","code":"n <- 10 x <- MASS::mvrnorm(n, mu = c(0, 0), Sigma = diag(c(1, 1))) delta <- matrix(stats::runif(2 * n, min = -3, max = 3), ncol = 2) epsilon <- stats::rbinom(n, 1, 1/2) delta <- delta * cbind(epsilon, 1 - epsilon) x <- x + delta (mt <- mediation_test_minimax(x, alpha = 1/20)) #> Testing the composite null 'delta_x * delta_y = 0' against its alternative 'delta_x * delta_y != 0': #> * method: #> minimax  #> * test statictic: #>            [,1]        [,2] #> [1,]  1.4917925  0.03773461 #> [2,] -1.5545253 -1.74423940 #> [3,] -0.5069587  0.22486544 #> [4,]  0.7110473 -0.22902736 #> [5,] -1.4115197 -0.97484568 #> [6,] -3.2665908  2.69237242 #> ... #> * wished type-I error: #> [1] 0.05 #> * user-supplied truncation parameter: #> [1] 0 #> * size  of the sample used to derive the  test statistic ('Inf' to use a Gaussian approximation; otherwise, use a product of Student laws): #> [1] Inf #> * decision [1 rejection(s) overall]:  #> cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  cannot reject the null for its alternative with confidence 0.050 #>  can reject the null for its alternative with confidence 0.050 #> ... #> * (conservative) p-value: #> [1] 0.969899284 0.098432452 0.588878203 0.751216581 0.329636815 0.007094567 #> ... plot(mt)"}]
